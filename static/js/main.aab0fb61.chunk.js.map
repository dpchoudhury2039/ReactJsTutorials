{"version":3,"sources":["components/card/card-component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","name","email","CardList","monsters","map","id","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","headers","then","Response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oVAEaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAK,kBACV,mCAAMF,EAAMG,QAAQC,QACpB,qCAAQJ,EAAMG,QAAQE,MAAtB,WCDKC,EAAW,SAAAN,GAAK,OACzB,qBAAKC,UAAU,YAAf,SAEAD,EAAMO,SAASC,KAAI,SAAAL,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAAWA,GAAvBA,EAAQM,UCLZC,G,OAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACAX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC4CCG,G,wDA5Cb,aAAc,IAAD,8BACX,gBAmBJH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAnBpC,EAAKC,MAAQ,CACVd,SAAU,GACVW,YAAa,IAJL,E,qDAQf,WAAoB,IAAD,OACjBI,MAAM,eAAgB,CACpBC,QAAU,CACR,eAAgB,mBAChB,OAAU,sBAIbC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACV,SAAUoB,S,oBAO1C,WAAU,IAAD,EAC2BC,KAAKP,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YAEZW,EAAmBtB,EAASuB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQC,KAAK2B,cAAcC,SAASd,EAAYe,wBAElD,OACE,sBAAKhC,UAAU,MAAf,UACE,yCACA,cAAC,EAAD,CACEU,YAAY,iBACZC,aAAcgB,KAAKhB,eAIrB,cAAC,EAAD,CAAUL,SAAUsB,W,GAxCRK,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.aab0fb61.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img src={'download.jfif'}/>\r\n        <h2> {props.monster.name}</h2>\r\n        <font> {props.monster.email} </font>\r\n    </div>\r\n)","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/card-component';\r\n\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'>\r\n    {\r\n    props.monsters.map(monster => (\r\n      <Card key={monster.id} monster = {monster} />\r\n    ))}\r\n    </div>\r\n    );","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange}) => (\r\n    <input \r\n    className='search'\r\n    type='search'\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n    />    \r\n);","import React, {Component} from 'react';\nimport './App.css';\nimport { render } from '@testing-library/react';\n\nimport {CardList} from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport { scryRenderedComponentsWithType } from 'react-dom/test-utils';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n       monsters: [],\n       searchField: ''\n      };\n}\n\ncomponentDidMount(){\n  fetch('monster.json', {\n    headers : { \n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n\n  })\n  .then( Response => Response.json())\n  .then(users => this.setState({monsters: users}));\n}\n\nhandleChange = e => {\n  this.setState({ searchField: e.target.value });\n}\n\nrender() {\n  const { monsters, searchField } = this.state;\n\n  const filteredMonsters = monsters.filter(monster => \n    monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    )\n  return (\n    <div className=\"App\">\n      <h1> Bhoot </h1>\n      <SearchBox\n        placeholder='Search Monster'\n        handleChange={this.handleChange}\n        //handleChange={e => this.setState({searchField: e.target.value})}\n\n      />\n      <CardList monsters={filteredMonsters}/>\n    </div>\n  );\n}\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}